<UserControl
    x:Class="PasswordManager.Views.PasswordsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:PasswordManager.Helpers"
    xmlns:local="clr-namespace:PasswordManager.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:vm="clr-namespace:PasswordManager.ViewModels"
    d:DataContext="{x:Static vm:PasswordsViewModel.DesignTimeInstance}"
    d:DesignHeight="450"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <Style
                x:Key="CredFilledTextBoxStyle"
                BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
                TargetType="{x:Type TextBox}">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="md:HintAssist.IsFloating" Value="True" />
                <Setter Property="md:TextFieldAssist.DecorationVisibility" Value="Collapsed" />
                <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="False" />
                <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4" />
            </Style>
            <Style
                x:Key="CredFilledPasswordBoxStyle"
                BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}"
                TargetType="{x:Type PasswordBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="md:HintAssist.IsFloating" Value="True" />
                <Setter Property="md:TextFieldAssist.DecorationVisibility" Value="Collapsed" />
                <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="False" />
                <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4" />
            </Style>
            <DataTemplate x:Key="CredentialDataTemplate" DataType="{x:Type vm:CredentialViewModel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <md:PackIcon />
                    <TextBlock
                        Grid.Column="1"
                        Margin="8 0 0 0"
                        Text="{Binding NameFieldVM.Value}" />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="32">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="240" />
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <md:PackIcon
                Width="24"
                Height="24"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{DynamicResource PrimaryHueMidBrush}"
                Kind="Password" />
            <TextBlock
                Grid.Column="1"
                Margin="10 0 0 0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                Text="Credentials" />
        </Grid>
        <Grid Grid.Row="1" Margin="0 16 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                HorizontalAlignment="Left"
                Command="{Binding AddCredentialCommand}"
                Content="{md:PackIcon Kind=Plus, Size=24}"
                Style="{StaticResource MaterialDesignOutlinedButton}" />
            <TextBox
                Grid.Column="1"
                x:Name="SearchTextBox"
                Margin="8 0 0 0"
                VerticalAlignment="Center"
                md:HintAssist.Hint="Search"
                md:HintAssist.IsFloating="False"
                md:TextFieldAssist.HasClearButton="True"
                md:TextFieldAssist.TextFieldCornerRadius="4"
                BorderThickness="0"
                Style="{StaticResource MaterialDesignFilledTextBox}" />
        </Grid>
        <Grid Grid.Row="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ListBox
                    ItemTemplate="{StaticResource CredentialDataTemplate}"
                    ItemsSource="{Binding Credentials}"
                    SelectedItem="{Binding SelectedCredential, UpdateSourceTrigger=PropertyChanged}"
                    UseLayoutRounding="true"
                    VirtualizingPanel.ScrollUnit="Pixel"
                    VirtualizingPanel.VirtualizationMode="Recycling"
                    VirtualizingStackPanel.CleanUpVirtualizedItem="ListBox_CleanUpVirtualizedItem" />
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Opacity="0.56"
                    Text="No any credentials">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource MaterialDesignSubtitle1TextBlock}" TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Credentials.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <md:Card
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RenderTransformOrigin=".5,.5"
                    UniformCornerRadius="18">
                    <ProgressBar
                        Margin="8"
                        IsIndeterminate="True"
                        Style="{StaticResource MaterialDesignCircularProgressBar}" />
                    <md:Card.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                        </TransformGroup>
                    </md:Card.RenderTransform>
                    <md:Card.Style>
                        <Style BasedOn="{StaticResource {x:Type md:Card}}" TargetType="{x:Type md:Card}">
                            <Style.Resources>
                                <Storyboard x:Key="FadeIn" FillBehavior="HoldEnd">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="FadeOut">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.8" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Style.Resources>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Loading}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="FadeOut" />
                                        <BeginStoryboard Name="FadeIn" Storyboard="{StaticResource FadeIn}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Loading}" Value="false">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="FadeIn" />
                                        <BeginStoryboard Name="FadeOut" Storyboard="{StaticResource FadeOut}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <Trigger Property="Opacity" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </md:Card.Style>
                </md:Card>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
