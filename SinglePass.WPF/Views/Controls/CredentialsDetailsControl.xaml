<UserControl
    x:Class="SinglePass.WPF.Views.Controls.CredentialsDetailsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assists="clr-namespace:SinglePass.WPF.Assists"
    xmlns:conv="clr-namespace:SinglePass.WPF.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:SinglePass.WPF.Helpers"
    xmlns:local="clr-namespace:SinglePass.WPF.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:properties="clr-namespace:SinglePass.Language.Properties;assembly=SinglePass.Language"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:SinglePass.WPF.ViewModels"
    d:DataContext="{x:Static vm:CredentialsDetailsViewModel.DesignTimeInstance}"
    d:DesignHeight="400"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <Style
                x:Key="CredFilledTextBoxStyle"
                BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
                TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="md:HintAssist.IsFloating" Value="True" />
                <Setter Property="md:HintAssist.FloatingScale" Value="1" />
                <Setter Property="md:TextFieldAssist.DecorationVisibility" Value="Collapsed" />
                <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="False" />
                <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4" />
            </Style>
            <Style
                x:Key="CredFilledPasswordBoxStyle"
                BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}"
                TargetType="{x:Type PasswordBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="md:HintAssist.FloatingScale" Value="1" />
                <Setter Property="md:TextFieldAssist.DecorationVisibility" Value="Collapsed" />
                <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="False" />
                <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4" />
            </Style>
            <Style
                x:Key="AdditionalFieldsStyle"
                BasedOn="{StaticResource MaterialDesignListBoxItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0 8 0 0" />
            </Style>
            <Style x:Key="BorderCoverStyle" TargetType="{x:Type Border}">
                <Setter Property="Padding" Value="8 4" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}" />
                <Setter Property="CornerRadius" Value="4" />
            </Style>
            <DataTemplate x:Key="FieldDataTemplate" DataType="{x:Type vm:PassFieldViewModel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBox
                        VerticalAlignment="Center"
                        md:HintAssist.Hint="{Binding Name}"
                        Style="{StaticResource CredFilledTextBoxStyle}"
                        Text="{Binding Value}" />
                </Grid>
            </DataTemplate>
            <conv:ModeToIsReadonlyConverter x:Key="ModeToIsReadonlyConverter" />
            <conv:ModeToVisibilityConverter x:Key="ModeToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="8 8 8 4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid
                Margin="16 0 0 0"
                HorizontalAlignment="Left"
                Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}, ConverterParameter='inverse'}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    Width="32"
                    Height="32"
                    VerticalAlignment="Center"
                    Source="{Binding CredentialViewModel.FavIcon}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="16 0 0 0"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                    Text="{Binding CredentialViewModel.NameFieldVM.Value, UpdateSourceTrigger=PropertyChanged}"
                    TextTrimming="CharacterEllipsis" />
            </Grid>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <md:PopupBox
                    Margin="4 0"
                    PlacementMode="BottomAndAlignRightEdges"
                    Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}, ConverterParameter='inverse'}">
                    <StackPanel>
                        <Button Command="{Binding EditCommand}">
                            <StackPanel Orientation="Horizontal">
                                <md:PackIcon Kind="Edit" />
                                <TextBlock
                                    Margin="16 0 0 0"
                                    FontSize="13"
                                    FontWeight="Normal"
                                    Text="{x:Static properties:Resources.Edit}" />
                            </StackPanel>
                        </Button>
                        <Button Command="{Binding DeleteCommand}" Foreground="{DynamicResource MaterialDesignValidationErrorBrush}">
                            <StackPanel Orientation="Horizontal">
                                <md:PackIcon Kind="Delete" />
                                <TextBlock
                                    Margin="16 0 0 0"
                                    VerticalAlignment="Center"
                                    FontSize="13"
                                    FontWeight="Normal"
                                    Text="{x:Static properties:Resources.Delete}" />
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </md:PopupBox>
                <Button
                    Grid.Column="1"
                    Width="40"
                    Height="28"
                    Padding="0"
                    Command="{Binding CancelCommand}"
                    Content="{md:PackIcon Kind=Close}"
                    IsCancel="True"
                    Style="{StaticResource MaterialDesignFlatButton}"
                    ToolTip="{x:Static properties:Resources.Cancel}"
                    Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}}" />
            </StackPanel>
        </Grid>
        <ScrollViewer
            Grid.Row="1"
            Margin="8 0"
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>
                <!--<Style BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" TargetType="ScrollBar" />-->
            </ScrollViewer.Resources>
            <Grid Margin="0 16 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <Border
                        Margin="0 0 0 16"
                        Style="{StaticResource BorderCoverStyle}"
                        Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}}">
                        <TextBox
                            assists:FocusAssist.IsFocused="{Binding IsNameTextBoxFocused, UpdateSourceTrigger=PropertyChanged}"
                            md:HintAssist.Hint="{x:Static properties:Resources.Name}"
                            md:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                            IsReadOnly="{Binding Mode, Converter={StaticResource ModeToIsReadonlyConverter}}"
                            MaxLength="200"
                            Style="{StaticResource CredFilledTextBoxStyle}"
                            Text="{Binding CredentialViewModel.NameFieldVM.Value, UpdateSourceTrigger=PropertyChanged}" />
                    </Border>
                    <Border Style="{StaticResource BorderCoverStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                md:HintAssist.Hint="{x:Static properties:Resources.Login}"
                                md:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                IsReadOnly="{Binding Mode, Converter={StaticResource ModeToIsReadonlyConverter}}"
                                MaxLength="200"
                                Style="{StaticResource CredFilledTextBoxStyle}"
                                Text="{Binding CredentialViewModel.LoginFieldVM.Value, UpdateSourceTrigger=PropertyChanged}" />
                            <Button
                                Grid.Column="1"
                                Margin="8 0 0 0"
                                Padding="8"
                                VerticalAlignment="Center"
                                Command="{Binding CopyToClipboardCommand}"
                                CommandParameter="{Binding CredentialViewModel.LoginFieldVM.Value}"
                                Content="{md:PackIcon Kind=ContentCopy}"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                ToolTip="{x:Static properties:Resources.CopyLogin}"
                                Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}, ConverterParameter='inverse'}" />
                        </Grid>
                    </Border>
                    <Border Margin="0 16 0 0" Style="{StaticResource BorderCoverStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                md:HintAssist.Hint="{x:Static properties:Resources.Password}"
                                md:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                IsReadOnly="{Binding Mode, Converter={StaticResource ModeToIsReadonlyConverter}}"
                                MaxLength="200"
                                Style="{StaticResource CredFilledTextBoxStyle}"
                                Text="{Binding CredentialViewModel.PasswordFieldVM.Value, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding IsPasswordVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <PasswordBox
                                x:Name="PasswordFieldBox"
                                Grid.Column="0"
                                md:HintAssist.Hint="{x:Static properties:Resources.Password}"
                                md:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                Focusable="False"
                                IsHitTestVisible="False"
                                MaxLength="200"
                                Style="{StaticResource CredFilledPasswordBoxStyle}"
                                Visibility="{Binding IsPasswordVisible, Converter={StaticResource InverseBoolToVisConverter}}" />
                            <StackPanel
                                Grid.Column="1"
                                Margin="8 0 0 0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}, ConverterParameter='inverse'}">
                                <ToggleButton
                                    md:ToggleButtonAssist.OnContent="{md:PackIcon Kind=EyeOff}"
                                    Background="Transparent"
                                    Content="{md:PackIcon Kind=Eye}"
                                    Foreground="{DynamicResource PrimaryHueMidBrush}"
                                    IsChecked="{Binding IsPasswordVisible}"
                                    Style="{StaticResource MaterialDesignActionToggleButton}"
                                    ToolTip="{x:Static properties:Resources.ShowHidePassword}" />
                                <Button
                                    Margin="8 0 0 0"
                                    Padding="8"
                                    Command="{Binding CopyToClipboardCommand}"
                                    CommandParameter="{Binding CredentialViewModel.PasswordFieldVM.Value}"
                                    Content="{md:PackIcon Kind=ContentCopy}"
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    ToolTip="{x:Static properties:Resources.CopyPassword}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border Margin="0 16 0 0" Style="{StaticResource BorderCoverStyle}">
                        <Grid>
                            <TextBox
                                md:HintAssist.Hint="{x:Static properties:Resources.Website}"
                                md:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                IsReadOnly="{Binding Mode, Converter={StaticResource ModeToIsReadonlyConverter}}"
                                MaxLength="5000"
                                Style="{StaticResource CredFilledTextBoxStyle}"
                                Text="{Binding CredentialViewModel.SiteFieldVM.Value, UpdateSourceTrigger=PropertyChanged}"
                                TextWrapping="Wrap" />
                            <Button
                                Width="20"
                                Height="20"
                                Padding="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Command="{Binding Data.OpenInBrowserCommand, Source={StaticResource Proxy}}"
                                Content="{md:PackIcon Kind=OpenInNew}"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                ToolTip="{x:Static properties:Resources.OpenInBrowser}"
                                Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}, ConverterParameter='inverse'}" />
                        </Grid>
                    </Border>
                    <Border Margin="0 16 0 0" Style="{StaticResource BorderCoverStyle}">
                        <TextBox
                            md:HintAssist.Hint="{x:Static properties:Resources.Other}"
                            md:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                            AcceptsReturn="True"
                            IsReadOnly="{Binding Mode, Converter={StaticResource ModeToIsReadonlyConverter}}"
                            MaxLength="5000"
                            Style="{StaticResource CredFilledTextBoxStyle}"
                            Text="{Binding CredentialViewModel.OtherFieldVM.Value, UpdateSourceTrigger=PropertyChanged}"
                            TextWrapping="Wrap" />
                    </Border>
                </StackPanel>
                <ListBox
                    Grid.Row="1"
                    HorizontalContentAlignment="Stretch"
                    md:ListBoxItemAssist.ShowSelection="False"
                    ItemContainerStyle="{StaticResource AdditionalFieldsStyle}"
                    ItemTemplate="{StaticResource FieldDataTemplate}"
                    ItemsSource="{Binding CredentialViewModel.AdditionalFields, Mode=OneTime}" />
                <TextBlock
                    Grid.Row="2"
                    Margin="0 8 0 0"
                    HorizontalAlignment="Center"
                    FontSize="11"
                    Opacity="0.56"
                    Style="{StaticResource MaterialDesignTextBlock}"
                    Text="{Binding CredentialViewModel.LastModifiedTime, StringFormat={x:Static properties:Resources.ModifiedFormatted}}" />
                <TextBlock
                    Grid.Row="3"
                    Margin="0 4 0 0"
                    HorizontalAlignment="Center"
                    FontSize="11"
                    Opacity="0.56"
                    Style="{StaticResource MaterialDesignTextBlock}"
                    Text="{Binding CredentialViewModel.CreationTime, StringFormat={x:Static properties:Resources.CreatedFormatted}}" />
            </Grid>
        </ScrollViewer>
        <Button
            Grid.Row="2"
            MaxWidth="500"
            Margin="8"
            Command="{Binding OkCommand}"
            IsDefault="True"
            Style="{StaticResource MaterialDesignRaisedButton}"
            Visibility="{Binding Mode, Converter={StaticResource ModeToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal">
                <md:PackIcon
                    Width="24"
                    Height="24"
                    VerticalAlignment="Center"
                    Kind="Tick" />
                <TextBlock
                    Margin="8 0 0 0"
                    VerticalAlignment="Center"
                    Text="{Binding CaptionText}" />
            </StackPanel>
        </Button>
    </Grid>
</UserControl>
