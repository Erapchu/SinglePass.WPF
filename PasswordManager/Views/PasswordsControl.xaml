<UserControl
    x:Class="PasswordManager.Views.PasswordsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:PasswordManager.Helpers"
    xmlns:local="clr-namespace:PasswordManager.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:vm="clr-namespace:PasswordManager.ViewModels"
    d:DataContext="{x:Static vm:PasswordsViewModel.DesignTimeInstance}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <Style
                x:Key="CredentialsListBoxItemStyle"
                BasedOn="{StaticResource MaterialDesignListBoxItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Padding" Value="0" />
            </Style>
            <Style
                x:Key="CredFilledTextBoxStyle"
                BasedOn="{StaticResource MaterialDesignFilledTextBox}"
                TargetType="{x:Type TextBox}">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="md:HintAssist.IsFloating" Value="True" />
                <Setter Property="md:TextFieldAssist.DecorationVisibility" Value="Collapsed" />
                <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="False" />
                <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4" />
            </Style>
            <DataTemplate x:Key="CredentialDataTemplate" DataType="{x:Type vm:CredentialViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Expander
                        x:Name="ItemExpander"
                        Margin="4"
                        IsExpanded="{Binding IsExpanded}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBox
                                Grid.Row="0"
                                Margin="0 2"
                                md:HintAssist.Hint="Login"
                                Style="{StaticResource CredFilledTextBoxStyle}"
                                Text="{Binding LoginFieldVM.Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox
                                Grid.Row="1"
                                Margin="0 2"
                                md:HintAssist.Hint="Password"
                                Style="{StaticResource CredFilledTextBoxStyle}"
                                Text="{Binding PasswordFieldVM.Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox
                                Grid.Row="2"
                                Margin="0 2"
                                md:HintAssist.Hint="Other"
                                Style="{StaticResource CredFilledTextBoxStyle}"
                                Text="{Binding OtherFieldVM.Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <Expander.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="15"
                                    Text="{Binding NameFieldVM.Value}" />
                                <StackPanel
                                    Grid.Column="1"
                                    Orientation="Horizontal"
                                    Visibility="{Binding IsMouseOver, ElementName=ItemExpander, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button
                                        Width="24"
                                        Height="24"
                                        Margin="0 0 8 0"
                                        Command="{Binding Data.EditCredentialCommand, Source={StaticResource Proxy}}"
                                        CommandParameter="{Binding}"
                                        Content="{md:PackIcon Kind=Edit, Size=16}"
                                        Style="{StaticResource MaterialDesignIconButton}" />
                                    <Button
                                        Width="24"
                                        Height="24"
                                        Content="{md:PackIcon Kind=Delete, Size=16}"
                                        Style="{StaticResource MaterialDesignIconButton}" />
                                </StackPanel>
                            </Grid>
                        </Expander.Header>
                    </Expander>
                    <Rectangle
                        Grid.Row="1"
                        Height="1"
                        Fill="{DynamicResource MaterialDesignDivider}" />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="240" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBox
                    x:Name="SearchTextBox"
                    Margin="8 8 0 8"
                    VerticalAlignment="Center"
                    md:HintAssist.Hint="Search"
                    md:HintAssist.IsFloating="False"
                    md:TextFieldAssist.HasClearButton="True"
                    md:TextFieldAssist.TextFieldCornerRadius="4"
                    BorderThickness="0"
                    Style="{StaticResource MaterialDesignFilledTextBox}" />
                <StackPanel
                    Grid.Column="1"
                    Margin="4 0"
                    Orientation="Horizontal">
                    <Button
                        Command="{Binding AddCredentialCommand}"
                        Content="{md:PackIcon Kind=Plus, Size=24}"
                        Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ListBox
                        md:ListBoxItemAssist.ShowSelection="false"
                        ItemContainerStyle="{StaticResource CredentialsListBoxItemStyle}"
                        ItemTemplate="{StaticResource CredentialDataTemplate}"
                        ItemsSource="{Binding Credentials}"
                        SelectedItem="{Binding SelectedCredential, UpdateSourceTrigger=PropertyChanged}"
                        UseLayoutRounding="true"
                        VirtualizingPanel.ScrollUnit="Pixel"
                        VirtualizingPanel.VirtualizationMode="Recycling"
                        VirtualizingStackPanel.CleanUpVirtualizedItem="ListBox_CleanUpVirtualizedItem"/>
                    <md:Card
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RenderTransformOrigin=".5,.5"
                        UniformCornerRadius="18">
                        <ProgressBar
                            Margin="8"
                            IsIndeterminate="True"
                            Style="{StaticResource MaterialDesignCircularProgressBar}" />
                        <md:Card.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                            </TransformGroup>
                        </md:Card.RenderTransform>
                        <md:Card.Style>
                            <Style BasedOn="{StaticResource {x:Type md:Card}}" TargetType="{x:Type md:Card}">
                                <Style.Resources>
                                    <Storyboard x:Key="FadeIn" FillBehavior="HoldEnd">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="FadeOut">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.8" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Style.Resources>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Loading}" Value="true">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="FadeOut" />
                                            <BeginStoryboard Name="FadeIn" Storyboard="{StaticResource FadeIn}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Loading}" Value="false">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="FadeIn" />
                                            <BeginStoryboard Name="FadeOut" Storyboard="{StaticResource FadeOut}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <Trigger Property="Opacity" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </md:Card.Style>
                    </md:Card>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
